pipeline {
    agent any
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "Terraform-Jenkins"
    }
    parameters {
        string(name: 'WORKSPACE', defaultValue: 'development', description:'setting up workspace for terraform')
    }
    environment {
        TF_HOME = tool('Terraform-Jenkins')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
        ACCESS_KEY = credentials('AWS_ACCESS_KEY_ID')
        SECRET_KEY = credentials('AWS_SECRET_ACCESS_KEY')
		AWS_DEFAULT_REGION = 'ap-south-1'
		AWS_PROFILE = '~/.aws/config'
		
    }
	
	options {
			withAWS(profile:'default', region:'ap-south-1', credentials:'JenkinAWSCRED')
			}
	
    stages {
	
		stage('checkout') {
			steps {
				script{
					dir("jenkins-terraform-pipeline/ec2_pipeline/") 
					{
                     git "https://github.com/mayankdpathak/jenkins-demo-aws.git"
                    }
                  }
                }
            }
			
		stage('TerraformInit'){
			steps {
				dir('jenkins-terraform-pipeline/ec2_pipeline/AWS-Base-Infra'){
					sh "terraform init -input=false"
					sh "echo \$PWD"
					sh "whoami"
					
                }
            }
        }

        stage('TerraformPlan'){
            steps {
                dir('jenkins-terraform-pipeline/ec2_pipeline/AWS-Base-Infra'){
                    sh "terraform plan -input=true -out tfplan"
					sh "terraform show -no-color tfplan > tfplan.txt"
                    }
                }
            }
        
        stage('TerraformApproval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
           }

           steps {
               script {
                    def plan = readFile 'jenkins-terraform-pipeline/ec2_pipeline/AWS-Base-Infra/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the Plan', defaultValue: Plan)]
               }
           }
       }

        stage('TerraformApply') {
            steps {
                dir('jenkins-terraform-pipeline/ec2_pipeline/AWS-Base-Infra'){
                sh "terraform apply -input=false tfplan"
            }
        }
		}
	}
}